services:
  mongo:
    image: mongo
    container_name: "mern-swapi1vite-mern-template-${NODE_ENV}-mongo"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo-data:/data/db
    command: mongod --quiet
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 5s

  api:
    container_name: "mern-swapi1vite-mern-template-${NODE_ENV}-api"
    build:
      context: .
      dockerfile: api/Dockerfile.development
    ports:
      - "${API_PORT}:5000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    command: npm run dev --workspace=api
    healthcheck:
      test: ["CMD", "curl", "-f", "${VITE_SEARCHES_STATS_API_URL}/health"]
      interval: 3s
      timeout: 10s
      retries: 5
      start_period: 10s

  pwa:
    container_name: "mern-swapi1vite-mern-template-${NODE_ENV}-pwa"
    build:
      context: .
      dockerfile: pwa/Dockerfile.development
      args:
        - VITE_PWA_PORT=${VITE_PWA_PORT}
        - VITE_SEARCHES_STATS_API_URL=${VITE_SEARCHES_STATS_API_URL}
        - VITE_SWAPI_API_URL=${VITE_SWAPI_API_URL}
    ports:
      - "${VITE_PWA_PORT}:${PWA_CONTAINER_PORT}"
    volumes:
      - .:/app
    env_file:
      - pwa/.env
    depends_on:
      api:
        condition: service_healthy
    command: sh -c "cd /app && npm run dev --workspace=pwa"
    healthcheck:
      test: ["CMD", "curl", "-f", "${PWA_URL}"]
      interval: 3s
      timeout: 10s 
      retries: 5
      start_period: 10s

volumes:
  mongo-data:
    name: "mern-swapi1vite-mern-template-${NODE_ENV}-mongo-data"