services:
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo-data:/data/db
    command: mongod --quiet
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    profiles:
      - development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 3s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend-prod:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
    profiles:
      - production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 3s
      timeout: 10s
      retries: 5
      start_period: 10s

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
    env_file:
      - frontend/.env
    depends_on:
      backend:
        condition: service_healthy
    profiles:
      - development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 3s
      timeout: 10s 
      retries: 5
      start_period: 10s

  frontend-prod:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
    ports:
      - "80:80"
    env_file:
      - frontend/.env
    depends_on:
      backend-prod:
        condition: service_healthy
    profiles:
      - production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 3s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  mongo-data:
    name: "mern-swapi1vite-mern-template-mongo-data"
